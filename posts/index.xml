<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 风笑天的博客</title>
    <link>https://xiarong715.github.io/posts/</link>
    <description>Recent content in Posts on 风笑天的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Feb 2021 17:08:50 +0800</lastBuildDate><atom:link href="https://xiarong715.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Centos7安装</title>
      <link>https://xiarong715.github.io/posts/linux/centos7%E5%AE%89%E8%A3%85/</link>
      <pubDate>Thu, 11 Feb 2021 17:08:50 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/linux/centos7%E5%AE%89%E8%A3%85/</guid>
      <description>一、下载
1 2  http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/CentOS-7-x86_64-DVD-1908.iso http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso   二、安装
  分区（新手方案）
swap分区 ：内存的2倍
根分区 / ：剩余的空间
  设置静态IP及DNS
设置静态IP
1 2 3 4 5 6 7 8  vi /etc/sysconfig/network-scripts/ifcfg-ens33 修改为： BOOTPROTO=static # 静态IP ONBOOT=yes	# 开机启动 IPADDR=192.168.80.130 # IP NETMASK=255.255.255.0 # 子网掩码 GATEWAY=192.168.80.2 # 网关   添加DNS
vi /etc/resolv.conf修改为：nameserver 192.168.10.247nameserver 114.114.114.114或vi /etc/sysconfig/network-scripts/ifcfg-ens33DNS1=192.168.10.247DNS2=114.114.114.114  三、更换为阿里源
备份:
1  mv /etc/yum.</description>
    </item>
    
    <item>
      <title>Docker Compose的使用</title>
      <link>https://xiarong715.github.io/posts/docker/docker-compose%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 29 Dec 2020 21:54:23 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/docker/docker-compose%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>1.docker-compose的作用
2.下载安装
docker-compose会依赖一些库
1  yum install -y py-pip python-dev libffi-dev openssl-dev gcc libc-dev make   下载docker-compose
1  curl -L &amp;#34;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose   添加执行权限
1  chmod +x /usr/local/bin/docker-compose   测试
1 2 3 4 5 6 7  docker-compose version ## 显示以下信息，表明docker-compose安装完成 docker-compose version 1.26.1, build f216ddbf docker-py version: 4.2.2 CPython version: 3.7.7 OpenSSL version: OpenSSL 1.1.0l 10 Sep 2019   3.</description>
    </item>
    
    <item>
      <title>Docker学习</title>
      <link>https://xiarong715.github.io/posts/docker/docker%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Wed, 23 Dec 2020 20:54:22 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/docker/docker%E5%AD%A6%E4%B9%A0/</guid>
      <description>1.docker的编写
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  FROMregistry.lan:5000/ipanel/centos7-devMAINTAINERiPanel Cloud TeamLABEL Vendor=&amp;#34;iPanel&amp;#34; \  License=MIT \  Version=2.0ADD CI /root/CIADD mkyaffs2image /usr/sbin/mkyaffs2imageADD rc.local /etc/rc.d/rc.localRUN chmod -v +x /root/CI -R RUN chmod -v +x /usr/sbin/mkyaffs2image RUN rpm --rebuilddb \ 	&amp;amp;&amp;amp; rpm --import \ 	http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-7 \ 	&amp;amp;&amp;amp; rpm --import \ 	https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 \ 	&amp;amp;&amp;amp; yum -y install \ 	--setopt=tsflags=nodocs \ 	--disableplugin=fastestmirror \ 	ncurses-devel zlib-devel bzip2 git openssl file gettext glibc.</description>
    </item>
    
    <item>
      <title>go plugin的用法</title>
      <link>https://xiarong715.github.io/posts/go/go-plugin%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 20 Dec 2020 18:12:33 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/go/go-plugin%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>1.编写plugin部分
创建文件testplugin.go
1 2 3 4 5 6 7 8 9 10 11 12  package main import &amp;#34;fmt&amp;#34; func init() { fmt.Println(&amp;#34;load plugin&amp;#34;) } // Hello hello func Hello() { fmt.Println(&amp;#34;Hello Plugin&amp;#34;) }   note: plugin的包名必须指定为main
2.编译plugin部分
1  go build --buildmode=plugin testplugin.go   编译后会生testplugin.so
3.编写主程序部分
创建文件main.go
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  package main import &amp;#34;plugin&amp;#34; func main() { p, err := plugin.</description>
    </item>
    
    <item>
      <title>git环境搭建</title>
      <link>https://xiarong715.github.io/posts/go/git%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 01 Dec 2020 20:32:32 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/go/git%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>1.download a tarball
下载最新版本git
1  wget https://www.kernel.org/pub/software/scm/git/git-2.9.5.tar.xz   2.解压
1  tar -xvf git-2.9.5.tar.xz   3.configure
1 2  cd git-2.9.5 ./configure   4.make and make install
1  make &amp;amp;&amp;amp; make install   5.测试
打印出版本号代表安装成功；
1 2  git version git version 2.9.5    problems
​	①fatal error: zlib.h: No such file or directory
1 2  yum search zlib yum install zlib-devel -y   ​	②Can&amp;rsquo;t locate ExtUtils/MakeMaker.</description>
    </item>
    
    <item>
      <title>go 语言环境搭建</title>
      <link>https://xiarong715.github.io/posts/go/go%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 26 Nov 2020 21:43:24 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/go/go%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>1.下载
打开网址，选择稳定版本下载
https://golang.org/dl/ (有墙打不开)
https://golang.google.cn/dl
https://studygolang.com/dl
1 2 3 4 5 6  // 二进制文件包下载 wget https://golang.google.cn/dl/go1.15.4.linux-amd64.tar.gz wget https://studygolang.com/dl/golang/go1.15.4.linux-amd64.tar.gz // 源码包下载 wget https://golang.google.cn/dl/go1.15.4.src.tar.gz   2.二进制文件安装
1  tar -xvzf go1.15.4.linux-amd64.tar.gz -C /usr/local   3.源码编译安装
源码需要有go环境，可以用yum安装一个，因为系统的版本更新滞后，所以有必要下载较新的版本安装
1  yum install -y go   1 2 3 4 5  解压 tar -xvzf go1.15.4.src.tar.gz -C /usr/local 编译 cd /usr/local/go/src ./all.bash   4.环境配置
1 2 3 4 5 6 7 8 9 10  vi /etc/profile 编辑文件添加下面内容： export GO111MODULE=on	# enable go moudle export GOPROXY=https://goproxy.</description>
    </item>
    
    <item>
      <title>hugo 搭建个人博客</title>
      <link>https://xiarong715.github.io/posts/hugo/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 18 Nov 2020 21:49:37 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/hugo/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>1.Download and Install
需要安装git和go；
git环境搭建参考：
https://xiarong715.github.io/post/git%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/
go环境搭建参考：
https://xiarong715.github.io/post/go%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/
1 2 3 4 5  mkdir $HOME/src cd $HOME/src git clone https://github.com/gohugoio/hugo.git cd hugo go install --tags extended   2.Create a New Site
1  hugo new site boke   3.Add a Theme
1 2 3  cd boke git clone https://github.com/flysnow-org/maupassant-hugo.git themes/maupassant echo &amp;#39;theme = &amp;#34;maupassant&amp;#34;&amp;#39; &amp;gt;&amp;gt; config.toml   4.Add Some Content
1 2  hugo new content/posts/hugo搭建个人博客.</description>
    </item>
    
  </channel>
</rss>
