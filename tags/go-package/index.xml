<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go package on 风笑天的博客</title>
    <link>https://xiarong715.github.io/tags/go-package/</link>
    <description>Recent content in go package on 风笑天的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Apr 2021 11:33:28 +0800</lastBuildDate><atom:link href="https://xiarong715.github.io/tags/go-package/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>go 导入自定义包</title>
      <link>https://xiarong715.github.io/posts/go/go%E5%AF%BC%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85/</link>
      <pubDate>Sun, 11 Apr 2021 11:33:28 +0800</pubDate>
      
      <guid>https://xiarong715.github.io/posts/go/go%E5%AF%BC%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85/</guid>
      <description>1.自定义包
为了模块化编程，需要把属于同一功能的源文件放在同一目录下，并在文件开头加上package calc，calc即为包名，包名与目录名可以不相同；
如：
goStudy/package/calc/operation.go
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  package calc func Add(a, b int) int { return a + b } func Sub(a, b int) int { return a - b } func Multi(a, b int) int { return a * b } func Division(a, b int) int { return a / b }   goStudy/package/snow/use.</description>
    </item>
    
  </channel>
</rss>
